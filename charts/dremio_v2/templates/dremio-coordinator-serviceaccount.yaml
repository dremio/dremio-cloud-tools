{{- if $.Values.coordinator.backups.enabled -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{- template "dremio.coordinator.serviceAccount" $ }}
rules:
  - apiGroups: [""]
    #
    # at the HTTP level, the name of the resource for accessing Secret
    # objects is "secrets"
    resources: ["pods", "pods/exec"]
    # create is required.
    verbs: ["get", "list", "watch", "create"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["kube-root-ca.crt"]
    verbs: ["get"]

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{- template "dremio.coordinator.serviceAccount" $ }}

---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: {{- template "dremio.coordinator.serviceAccount" $ }}
  # TODO might need this
  # namespace: default
subjects:
  # You can specify more than one "subject"
  - kind: ServiceAccount
    name: {{- template "dremio.coordinator.serviceAccount" $ }}
    # TODO might need this
    # namespace: default
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role
  name: {{- template "dremio.coordinator.serviceAccount" $ }}-role
  apiGroup: rbac.authorization.k8s.io
{{- end -}}
